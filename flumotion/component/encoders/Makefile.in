# Makefile.in generated by automake 1.10.1 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

# py_compile = $(top_srcdir)/common/py-compile-destdir --destdir $(DESTDIR)

VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
DIST_COMMON = $(component_PYTHON) $(dirac_PYTHON) $(jpeg_PYTHON) \
	$(mulaw_PYTHON) $(smoke_PYTHON) $(speex_PYTHON) \
	$(srcdir)/Makefile.am $(srcdir)/Makefile.in $(theora_PYTHON) \
	$(top_srcdir)/common/python.mk $(vorbis_PYTHON)
subdir = flumotion/component/encoders
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/common/as-ac-expand.m4 \
	$(top_srcdir)/common/as-libtool-tags.m4 \
	$(top_srcdir)/common/as-python.m4 \
	$(top_srcdir)/common/as-version.m4 \
	$(top_srcdir)/common/intltool.m4 \
	$(top_srcdir)/common/twisted-module.m4 \
	$(top_srcdir)/m4/gettext.m4 $(top_srcdir)/m4/iconv.m4 \
	$(top_srcdir)/m4/lib-ld.m4 $(top_srcdir)/m4/lib-link.m4 \
	$(top_srcdir)/m4/lib-prefix.m4 $(top_srcdir)/m4/progtest.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_CLEAN_FILES =
SOURCES =
DIST_SOURCES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;
am__installdirs = "$(DESTDIR)$(componentdir)" "$(DESTDIR)$(diracdir)" \
	"$(DESTDIR)$(jpegdir)" "$(DESTDIR)$(mulawdir)" \
	"$(DESTDIR)$(smokedir)" "$(DESTDIR)$(speexdir)" \
	"$(DESTDIR)$(theoradir)" "$(DESTDIR)$(vorbisdir)" \
	"$(DESTDIR)$(diracdir)" "$(DESTDIR)$(jpegdir)" \
	"$(DESTDIR)$(mulawdir)" "$(DESTDIR)$(smokedir)" \
	"$(DESTDIR)$(speexdir)" "$(DESTDIR)$(theoradir)" \
	"$(DESTDIR)$(vorbisdir)"
componentPYTHON_INSTALL = $(INSTALL_DATA)
diracPYTHON_INSTALL = $(INSTALL_DATA)
jpegPYTHON_INSTALL = $(INSTALL_DATA)
mulawPYTHON_INSTALL = $(INSTALL_DATA)
smokePYTHON_INSTALL = $(INSTALL_DATA)
speexPYTHON_INSTALL = $(INSTALL_DATA)
theoraPYTHON_INSTALL = $(INSTALL_DATA)
vorbisPYTHON_INSTALL = $(INSTALL_DATA)
py_compile = $(top_srcdir)/py-compile
diracDATA_INSTALL = $(INSTALL_DATA)
jpegDATA_INSTALL = $(INSTALL_DATA)
mulawDATA_INSTALL = $(INSTALL_DATA)
smokeDATA_INSTALL = $(INSTALL_DATA)
speexDATA_INSTALL = $(INSTALL_DATA)
theoraDATA_INSTALL = $(INSTALL_DATA)
vorbisDATA_INSTALL = $(INSTALL_DATA)
DATA = $(dirac_DATA) $(jpeg_DATA) $(mulaw_DATA) $(smoke_DATA) \
	$(speex_DATA) $(theora_DATA) $(vorbis_DATA)
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
ACLOCAL_AMFLAGS = @ACLOCAL_AMFLAGS@
AMTAR = @AMTAR@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
BINDIR = @BINDIR@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CORTADO_PREFIX = @CORTADO_PREFIX@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CYGPATH_W = @CYGPATH_W@
DATADIR = @DATADIR@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DSYMUTIL = @DSYMUTIL@
ECHO = @ECHO@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EPYDOC = @EPYDOC@
EXEEXT = @EXEEXT@
FLUMOTION = @FLUMOTION@
FLUMOTION_MAJOR = @FLUMOTION_MAJOR@
FLUMOTION_MICRO = @FLUMOTION_MICRO@
FLUMOTION_MINOR = @FLUMOTION_MINOR@
FLUMOTION_NANO = @FLUMOTION_NANO@
FLUMOTION_RELEASE = @FLUMOTION_RELEASE@
GETTEXT_PACKAGE = @GETTEXT_PACKAGE@
GMSGFMT = @GMSGFMT@
GREP = @GREP@
GST_010_REQ = @GST_010_REQ@
GTK_CFLAGS = @GTK_CFLAGS@
GTK_LIBS = @GTK_LIBS@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
INTLLIBS = @INTLLIBS@
INTLTOOL_CAVES_RULE = @INTLTOOL_CAVES_RULE@
INTLTOOL_DESKTOP_RULE = @INTLTOOL_DESKTOP_RULE@
INTLTOOL_DIRECTORY_RULE = @INTLTOOL_DIRECTORY_RULE@
INTLTOOL_EXTRACT = @INTLTOOL_EXTRACT@
INTLTOOL_ICONV = @INTLTOOL_ICONV@
INTLTOOL_KBD_RULE = @INTLTOOL_KBD_RULE@
INTLTOOL_KEYS_RULE = @INTLTOOL_KEYS_RULE@
INTLTOOL_MERGE = @INTLTOOL_MERGE@
INTLTOOL_MSGFMT = @INTLTOOL_MSGFMT@
INTLTOOL_MSGMERGE = @INTLTOOL_MSGMERGE@
INTLTOOL_OAF_RULE = @INTLTOOL_OAF_RULE@
INTLTOOL_PERL = @INTLTOOL_PERL@
INTLTOOL_PONG_RULE = @INTLTOOL_PONG_RULE@
INTLTOOL_PROP_RULE = @INTLTOOL_PROP_RULE@
INTLTOOL_SCHEMAS_RULE = @INTLTOOL_SCHEMAS_RULE@
INTLTOOL_SERVER_RULE = @INTLTOOL_SERVER_RULE@
INTLTOOL_SERVICE_RULE = @INTLTOOL_SERVICE_RULE@
INTLTOOL_SHEET_RULE = @INTLTOOL_SHEET_RULE@
INTLTOOL_SOUNDLIST_RULE = @INTLTOOL_SOUNDLIST_RULE@
INTLTOOL_THEME_RULE = @INTLTOOL_THEME_RULE@
INTLTOOL_UI_RULE = @INTLTOOL_UI_RULE@
INTLTOOL_UPDATE = @INTLTOOL_UPDATE@
INTLTOOL_XAM_RULE = @INTLTOOL_XAM_RULE@
INTLTOOL_XGETTEXT = @INTLTOOL_XGETTEXT@
INTLTOOL_XML_NOMERGE_RULE = @INTLTOOL_XML_NOMERGE_RULE@
INTLTOOL_XML_RULE = @INTLTOOL_XML_RULE@
LDFLAGS = @LDFLAGS@
LIBDIR = @LIBDIR@
LIBICONV = @LIBICONV@
LIBINTL = @LIBINTL@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LN_S = @LN_S@
LOCALSTATEDIR = @LOCALSTATEDIR@
LTLIBICONV = @LTLIBICONV@
LTLIBINTL = @LTLIBINTL@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MKDIR_P = @MKDIR_P@
MKINSTALLDIRS = @MKINSTALLDIRS@
MSGFMT = @MSGFMT@
MSGMERGE = @MSGMERGE@
NMEDIT = @NMEDIT@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PKG_CONFIG = @PKG_CONFIG@
POSUB = @POSUB@
PYCHECKER = @PYCHECKER@
PYGST_010_REQ = @PYGST_010_REQ@
PYGTK_010_REQ = @PYGTK_010_REQ@
PYGTK_CFLAGS = @PYGTK_CFLAGS@
PYGTK_CODEGEN = @PYGTK_CODEGEN@
PYGTK_DEFSDIR = @PYGTK_DEFSDIR@
PYGTK_LIBS = @PYGTK_LIBS@
PYTHON = @PYTHON@
PYTHON_EXEC_PREFIX = @PYTHON_EXEC_PREFIX@
PYTHON_INCLUDES = @PYTHON_INCLUDES@
PYTHON_PLATFORM = @PYTHON_PLATFORM@
PYTHON_PREFIX = @PYTHON_PREFIX@
PYTHON_VERSION = @PYTHON_VERSION@
RANLIB = @RANLIB@
RELEASE = @RELEASE@
SBINDIR = @SBINDIR@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
SYSCONFDIR = @SYSCONFDIR@
USE_NLS = @USE_NLS@
VERSION = @VERSION@
XGETTEXT = @XGETTEXT@
XVFB = @XVFB@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CC = @ac_ct_CC@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
pkgpyexecdir = @pkgpyexecdir@
pkgpythondir = @pkgpythondir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
pyexecdir = @pyexecdir@
pythondir = @pythondir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
componentdir = $(libdir)/flumotion/python/flumotion/component/encoders
component_PYTHON = \
	__init__.py

diracdir = $(componentdir)/dirac
dirac_PYTHON = \
	dirac/__init__.py \
	dirac/dirac.py \
	dirac/wizard_gtk.py

dirac_DATA = \
	dirac/dirac.xml \
	dirac/wizard.glade

jpegdir = $(componentdir)/jpeg
jpeg_PYTHON = \
	jpeg/__init__.py \
	jpeg/jpeg.py \
	jpeg/wizard_gtk.py

jpeg_DATA = \
	jpeg/jpeg.xml \
	jpeg/wizard.glade

mulawdir = $(componentdir)/mulaw
mulaw_PYTHON = \
	mulaw/__init__.py \
	mulaw/mulaw.py \
	mulaw/wizard_gtk.py

mulaw_DATA = \
	mulaw/mulaw.xml \
	mulaw/wizard.glade

smokedir = $(componentdir)/smoke
smoke_PYTHON = \
	smoke/__init__.py \
	smoke/smoke.py \
	smoke/wizard_gtk.py

smoke_DATA = \
	smoke/smoke.xml \
	smoke/wizard.glade

speexdir = $(componentdir)/speex
speex_PYTHON = \
	speex/__init__.py \
	speex/speex.py \
	speex/wizard_gtk.py

speex_DATA = \
	speex/speex.xml

theoradir = $(componentdir)/theora
theora_PYTHON = \
	theora/__init__.py \
	theora/theora.py \
	theora/wizard_gtk.py

theora_DATA = \
	theora/theora.xml \
	theora/wizard.glade

vorbisdir = $(componentdir)/vorbis
vorbis_PYTHON = \
	vorbis/__init__.py \
	vorbis/vorbis.py \
	vorbis/vorbisutils.py \
	vorbis/vorbis010.py \
	vorbis/wizard_gtk.py

vorbis_DATA = \
	vorbis/vorbis.xml \
	vorbis/wizard.glade

EXTRA_DIST = \
	$(component_DATA) \
	$(dirac_DATA) $(jpeg_DATA) $(mulaw_DATA) $(smoke_DATA) \
	$(speex_DATA) $(theora_DATA) $(vorbis_DATA)

all: all-am

.SUFFIXES:
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(top_srcdir)/common/python.mk $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  flumotion/component/encoders/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  flumotion/component/encoders/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-componentPYTHON: $(component_PYTHON)
	@$(NORMAL_INSTALL)
	test -z "$(componentdir)" || $(MKDIR_P) "$(DESTDIR)$(componentdir)"
	@list='$(component_PYTHON)'; dlist=''; for p in $$list; do\
	  if test -f "$$p"; then b=; else b="$(srcdir)/"; fi; \
	  if test -f $$b$$p; then \
	    f=$(am__strip_dir) \
	    dlist="$$dlist $$f"; \
	    echo " $(componentPYTHON_INSTALL) '$$b$$p' '$(DESTDIR)$(componentdir)/$$f'"; \
	    $(componentPYTHON_INSTALL) "$$b$$p" "$(DESTDIR)$(componentdir)/$$f"; \
	  else :; fi; \
	done; \
	if test -n "$$dlist"; then \
	  if test -z "$(DESTDIR)"; then \
	    PYTHON=$(PYTHON) $(py_compile) --basedir "$(componentdir)" $$dlist; \
	  else \
	    PYTHON=$(PYTHON) $(py_compile) --destdir "$(DESTDIR)" --basedir "$(componentdir)" $$dlist; \
	  fi; \
	else :; fi

uninstall-componentPYTHON:
	@$(NORMAL_UNINSTALL)
	@list='$(component_PYTHON)'; dlist=''; for p in $$list; do\
	  f=$(am__strip_dir) \
	  rm -f "$(DESTDIR)$(componentdir)/$$f"; \
	  rm -f "$(DESTDIR)$(componentdir)/$${f}c"; \
	  rm -f "$(DESTDIR)$(componentdir)/$${f}o"; \
	done
install-diracPYTHON: $(dirac_PYTHON)
	@$(NORMAL_INSTALL)
	test -z "$(diracdir)" || $(MKDIR_P) "$(DESTDIR)$(diracdir)"
	@list='$(dirac_PYTHON)'; dlist=''; for p in $$list; do\
	  if test -f "$$p"; then b=; else b="$(srcdir)/"; fi; \
	  if test -f $$b$$p; then \
	    f=$(am__strip_dir) \
	    dlist="$$dlist $$f"; \
	    echo " $(diracPYTHON_INSTALL) '$$b$$p' '$(DESTDIR)$(diracdir)/$$f'"; \
	    $(diracPYTHON_INSTALL) "$$b$$p" "$(DESTDIR)$(diracdir)/$$f"; \
	  else :; fi; \
	done; \
	if test -n "$$dlist"; then \
	  if test -z "$(DESTDIR)"; then \
	    PYTHON=$(PYTHON) $(py_compile) --basedir "$(diracdir)" $$dlist; \
	  else \
	    PYTHON=$(PYTHON) $(py_compile) --destdir "$(DESTDIR)" --basedir "$(diracdir)" $$dlist; \
	  fi; \
	else :; fi

uninstall-diracPYTHON:
	@$(NORMAL_UNINSTALL)
	@list='$(dirac_PYTHON)'; dlist=''; for p in $$list; do\
	  f=$(am__strip_dir) \
	  rm -f "$(DESTDIR)$(diracdir)/$$f"; \
	  rm -f "$(DESTDIR)$(diracdir)/$${f}c"; \
	  rm -f "$(DESTDIR)$(diracdir)/$${f}o"; \
	done
install-jpegPYTHON: $(jpeg_PYTHON)
	@$(NORMAL_INSTALL)
	test -z "$(jpegdir)" || $(MKDIR_P) "$(DESTDIR)$(jpegdir)"
	@list='$(jpeg_PYTHON)'; dlist=''; for p in $$list; do\
	  if test -f "$$p"; then b=; else b="$(srcdir)/"; fi; \
	  if test -f $$b$$p; then \
	    f=$(am__strip_dir) \
	    dlist="$$dlist $$f"; \
	    echo " $(jpegPYTHON_INSTALL) '$$b$$p' '$(DESTDIR)$(jpegdir)/$$f'"; \
	    $(jpegPYTHON_INSTALL) "$$b$$p" "$(DESTDIR)$(jpegdir)/$$f"; \
	  else :; fi; \
	done; \
	if test -n "$$dlist"; then \
	  if test -z "$(DESTDIR)"; then \
	    PYTHON=$(PYTHON) $(py_compile) --basedir "$(jpegdir)" $$dlist; \
	  else \
	    PYTHON=$(PYTHON) $(py_compile) --destdir "$(DESTDIR)" --basedir "$(jpegdir)" $$dlist; \
	  fi; \
	else :; fi

uninstall-jpegPYTHON:
	@$(NORMAL_UNINSTALL)
	@list='$(jpeg_PYTHON)'; dlist=''; for p in $$list; do\
	  f=$(am__strip_dir) \
	  rm -f "$(DESTDIR)$(jpegdir)/$$f"; \
	  rm -f "$(DESTDIR)$(jpegdir)/$${f}c"; \
	  rm -f "$(DESTDIR)$(jpegdir)/$${f}o"; \
	done
install-mulawPYTHON: $(mulaw_PYTHON)
	@$(NORMAL_INSTALL)
	test -z "$(mulawdir)" || $(MKDIR_P) "$(DESTDIR)$(mulawdir)"
	@list='$(mulaw_PYTHON)'; dlist=''; for p in $$list; do\
	  if test -f "$$p"; then b=; else b="$(srcdir)/"; fi; \
	  if test -f $$b$$p; then \
	    f=$(am__strip_dir) \
	    dlist="$$dlist $$f"; \
	    echo " $(mulawPYTHON_INSTALL) '$$b$$p' '$(DESTDIR)$(mulawdir)/$$f'"; \
	    $(mulawPYTHON_INSTALL) "$$b$$p" "$(DESTDIR)$(mulawdir)/$$f"; \
	  else :; fi; \
	done; \
	if test -n "$$dlist"; then \
	  if test -z "$(DESTDIR)"; then \
	    PYTHON=$(PYTHON) $(py_compile) --basedir "$(mulawdir)" $$dlist; \
	  else \
	    PYTHON=$(PYTHON) $(py_compile) --destdir "$(DESTDIR)" --basedir "$(mulawdir)" $$dlist; \
	  fi; \
	else :; fi

uninstall-mulawPYTHON:
	@$(NORMAL_UNINSTALL)
	@list='$(mulaw_PYTHON)'; dlist=''; for p in $$list; do\
	  f=$(am__strip_dir) \
	  rm -f "$(DESTDIR)$(mulawdir)/$$f"; \
	  rm -f "$(DESTDIR)$(mulawdir)/$${f}c"; \
	  rm -f "$(DESTDIR)$(mulawdir)/$${f}o"; \
	done
install-smokePYTHON: $(smoke_PYTHON)
	@$(NORMAL_INSTALL)
	test -z "$(smokedir)" || $(MKDIR_P) "$(DESTDIR)$(smokedir)"
	@list='$(smoke_PYTHON)'; dlist=''; for p in $$list; do\
	  if test -f "$$p"; then b=; else b="$(srcdir)/"; fi; \
	  if test -f $$b$$p; then \
	    f=$(am__strip_dir) \
	    dlist="$$dlist $$f"; \
	    echo " $(smokePYTHON_INSTALL) '$$b$$p' '$(DESTDIR)$(smokedir)/$$f'"; \
	    $(smokePYTHON_INSTALL) "$$b$$p" "$(DESTDIR)$(smokedir)/$$f"; \
	  else :; fi; \
	done; \
	if test -n "$$dlist"; then \
	  if test -z "$(DESTDIR)"; then \
	    PYTHON=$(PYTHON) $(py_compile) --basedir "$(smokedir)" $$dlist; \
	  else \
	    PYTHON=$(PYTHON) $(py_compile) --destdir "$(DESTDIR)" --basedir "$(smokedir)" $$dlist; \
	  fi; \
	else :; fi

uninstall-smokePYTHON:
	@$(NORMAL_UNINSTALL)
	@list='$(smoke_PYTHON)'; dlist=''; for p in $$list; do\
	  f=$(am__strip_dir) \
	  rm -f "$(DESTDIR)$(smokedir)/$$f"; \
	  rm -f "$(DESTDIR)$(smokedir)/$${f}c"; \
	  rm -f "$(DESTDIR)$(smokedir)/$${f}o"; \
	done
install-speexPYTHON: $(speex_PYTHON)
	@$(NORMAL_INSTALL)
	test -z "$(speexdir)" || $(MKDIR_P) "$(DESTDIR)$(speexdir)"
	@list='$(speex_PYTHON)'; dlist=''; for p in $$list; do\
	  if test -f "$$p"; then b=; else b="$(srcdir)/"; fi; \
	  if test -f $$b$$p; then \
	    f=$(am__strip_dir) \
	    dlist="$$dlist $$f"; \
	    echo " $(speexPYTHON_INSTALL) '$$b$$p' '$(DESTDIR)$(speexdir)/$$f'"; \
	    $(speexPYTHON_INSTALL) "$$b$$p" "$(DESTDIR)$(speexdir)/$$f"; \
	  else :; fi; \
	done; \
	if test -n "$$dlist"; then \
	  if test -z "$(DESTDIR)"; then \
	    PYTHON=$(PYTHON) $(py_compile) --basedir "$(speexdir)" $$dlist; \
	  else \
	    PYTHON=$(PYTHON) $(py_compile) --destdir "$(DESTDIR)" --basedir "$(speexdir)" $$dlist; \
	  fi; \
	else :; fi

uninstall-speexPYTHON:
	@$(NORMAL_UNINSTALL)
	@list='$(speex_PYTHON)'; dlist=''; for p in $$list; do\
	  f=$(am__strip_dir) \
	  rm -f "$(DESTDIR)$(speexdir)/$$f"; \
	  rm -f "$(DESTDIR)$(speexdir)/$${f}c"; \
	  rm -f "$(DESTDIR)$(speexdir)/$${f}o"; \
	done
install-theoraPYTHON: $(theora_PYTHON)
	@$(NORMAL_INSTALL)
	test -z "$(theoradir)" || $(MKDIR_P) "$(DESTDIR)$(theoradir)"
	@list='$(theora_PYTHON)'; dlist=''; for p in $$list; do\
	  if test -f "$$p"; then b=; else b="$(srcdir)/"; fi; \
	  if test -f $$b$$p; then \
	    f=$(am__strip_dir) \
	    dlist="$$dlist $$f"; \
	    echo " $(theoraPYTHON_INSTALL) '$$b$$p' '$(DESTDIR)$(theoradir)/$$f'"; \
	    $(theoraPYTHON_INSTALL) "$$b$$p" "$(DESTDIR)$(theoradir)/$$f"; \
	  else :; fi; \
	done; \
	if test -n "$$dlist"; then \
	  if test -z "$(DESTDIR)"; then \
	    PYTHON=$(PYTHON) $(py_compile) --basedir "$(theoradir)" $$dlist; \
	  else \
	    PYTHON=$(PYTHON) $(py_compile) --destdir "$(DESTDIR)" --basedir "$(theoradir)" $$dlist; \
	  fi; \
	else :; fi

uninstall-theoraPYTHON:
	@$(NORMAL_UNINSTALL)
	@list='$(theora_PYTHON)'; dlist=''; for p in $$list; do\
	  f=$(am__strip_dir) \
	  rm -f "$(DESTDIR)$(theoradir)/$$f"; \
	  rm -f "$(DESTDIR)$(theoradir)/$${f}c"; \
	  rm -f "$(DESTDIR)$(theoradir)/$${f}o"; \
	done
install-vorbisPYTHON: $(vorbis_PYTHON)
	@$(NORMAL_INSTALL)
	test -z "$(vorbisdir)" || $(MKDIR_P) "$(DESTDIR)$(vorbisdir)"
	@list='$(vorbis_PYTHON)'; dlist=''; for p in $$list; do\
	  if test -f "$$p"; then b=; else b="$(srcdir)/"; fi; \
	  if test -f $$b$$p; then \
	    f=$(am__strip_dir) \
	    dlist="$$dlist $$f"; \
	    echo " $(vorbisPYTHON_INSTALL) '$$b$$p' '$(DESTDIR)$(vorbisdir)/$$f'"; \
	    $(vorbisPYTHON_INSTALL) "$$b$$p" "$(DESTDIR)$(vorbisdir)/$$f"; \
	  else :; fi; \
	done; \
	if test -n "$$dlist"; then \
	  if test -z "$(DESTDIR)"; then \
	    PYTHON=$(PYTHON) $(py_compile) --basedir "$(vorbisdir)" $$dlist; \
	  else \
	    PYTHON=$(PYTHON) $(py_compile) --destdir "$(DESTDIR)" --basedir "$(vorbisdir)" $$dlist; \
	  fi; \
	else :; fi

uninstall-vorbisPYTHON:
	@$(NORMAL_UNINSTALL)
	@list='$(vorbis_PYTHON)'; dlist=''; for p in $$list; do\
	  f=$(am__strip_dir) \
	  rm -f "$(DESTDIR)$(vorbisdir)/$$f"; \
	  rm -f "$(DESTDIR)$(vorbisdir)/$${f}c"; \
	  rm -f "$(DESTDIR)$(vorbisdir)/$${f}o"; \
	done
install-diracDATA: $(dirac_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(diracdir)" || $(MKDIR_P) "$(DESTDIR)$(diracdir)"
	@list='$(dirac_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(diracDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(diracdir)/$$f'"; \
	  $(diracDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(diracdir)/$$f"; \
	done

uninstall-diracDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dirac_DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(diracdir)/$$f'"; \
	  rm -f "$(DESTDIR)$(diracdir)/$$f"; \
	done
install-jpegDATA: $(jpeg_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(jpegdir)" || $(MKDIR_P) "$(DESTDIR)$(jpegdir)"
	@list='$(jpeg_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(jpegDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(jpegdir)/$$f'"; \
	  $(jpegDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(jpegdir)/$$f"; \
	done

uninstall-jpegDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(jpeg_DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(jpegdir)/$$f'"; \
	  rm -f "$(DESTDIR)$(jpegdir)/$$f"; \
	done
install-mulawDATA: $(mulaw_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(mulawdir)" || $(MKDIR_P) "$(DESTDIR)$(mulawdir)"
	@list='$(mulaw_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(mulawDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(mulawdir)/$$f'"; \
	  $(mulawDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(mulawdir)/$$f"; \
	done

uninstall-mulawDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(mulaw_DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(mulawdir)/$$f'"; \
	  rm -f "$(DESTDIR)$(mulawdir)/$$f"; \
	done
install-smokeDATA: $(smoke_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(smokedir)" || $(MKDIR_P) "$(DESTDIR)$(smokedir)"
	@list='$(smoke_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(smokeDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(smokedir)/$$f'"; \
	  $(smokeDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(smokedir)/$$f"; \
	done

uninstall-smokeDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(smoke_DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(smokedir)/$$f'"; \
	  rm -f "$(DESTDIR)$(smokedir)/$$f"; \
	done
install-speexDATA: $(speex_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(speexdir)" || $(MKDIR_P) "$(DESTDIR)$(speexdir)"
	@list='$(speex_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(speexDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(speexdir)/$$f'"; \
	  $(speexDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(speexdir)/$$f"; \
	done

uninstall-speexDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(speex_DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(speexdir)/$$f'"; \
	  rm -f "$(DESTDIR)$(speexdir)/$$f"; \
	done
install-theoraDATA: $(theora_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(theoradir)" || $(MKDIR_P) "$(DESTDIR)$(theoradir)"
	@list='$(theora_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(theoraDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(theoradir)/$$f'"; \
	  $(theoraDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(theoradir)/$$f"; \
	done

uninstall-theoraDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(theora_DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(theoradir)/$$f'"; \
	  rm -f "$(DESTDIR)$(theoradir)/$$f"; \
	done
install-vorbisDATA: $(vorbis_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(vorbisdir)" || $(MKDIR_P) "$(DESTDIR)$(vorbisdir)"
	@list='$(vorbis_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(vorbisDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(vorbisdir)/$$f'"; \
	  $(vorbisDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(vorbisdir)/$$f"; \
	done

uninstall-vorbisDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(vorbis_DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(vorbisdir)/$$f'"; \
	  rm -f "$(DESTDIR)$(vorbisdir)/$$f"; \
	done
tags: TAGS
TAGS:

ctags: CTAGS
CTAGS:


distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(DATA)
installdirs:
	for dir in "$(DESTDIR)$(componentdir)" "$(DESTDIR)$(diracdir)" "$(DESTDIR)$(jpegdir)" "$(DESTDIR)$(mulawdir)" "$(DESTDIR)$(smokedir)" "$(DESTDIR)$(speexdir)" "$(DESTDIR)$(theoradir)" "$(DESTDIR)$(vorbisdir)" "$(DESTDIR)$(diracdir)" "$(DESTDIR)$(jpegdir)" "$(DESTDIR)$(mulawdir)" "$(DESTDIR)$(smokedir)" "$(DESTDIR)$(speexdir)" "$(DESTDIR)$(theoradir)" "$(DESTDIR)$(vorbisdir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libtool clean-local mostlyclean-am

distclean: distclean-am
	-rm -f Makefile
distclean-am: clean-am distclean-generic

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am: install-componentPYTHON install-diracDATA \
	install-diracPYTHON install-jpegDATA install-jpegPYTHON \
	install-mulawDATA install-mulawPYTHON install-smokeDATA \
	install-smokePYTHON install-speexDATA install-speexPYTHON \
	install-theoraDATA install-theoraPYTHON install-vorbisDATA \
	install-vorbisPYTHON

install-dvi: install-dvi-am

install-exec-am:

install-html: install-html-am

install-info: install-info-am

install-man:

install-pdf: install-pdf-am

install-ps: install-ps-am

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-generic mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-componentPYTHON uninstall-diracDATA \
	uninstall-diracPYTHON uninstall-jpegDATA uninstall-jpegPYTHON \
	uninstall-mulawDATA uninstall-mulawPYTHON uninstall-smokeDATA \
	uninstall-smokePYTHON uninstall-speexDATA \
	uninstall-speexPYTHON uninstall-theoraDATA \
	uninstall-theoraPYTHON uninstall-vorbisDATA \
	uninstall-vorbisPYTHON

.MAKE: install-am install-strip

.PHONY: all all-am check check-am clean clean-generic clean-libtool \
	clean-local distclean distclean-generic distclean-libtool \
	distdir dvi dvi-am html html-am info info-am install \
	install-am install-componentPYTHON install-data \
	install-data-am install-diracDATA install-diracPYTHON \
	install-dvi install-dvi-am install-exec install-exec-am \
	install-html install-html-am install-info install-info-am \
	install-jpegDATA install-jpegPYTHON install-man \
	install-mulawDATA install-mulawPYTHON install-pdf \
	install-pdf-am install-ps install-ps-am install-smokeDATA \
	install-smokePYTHON install-speexDATA install-speexPYTHON \
	install-strip install-theoraDATA install-theoraPYTHON \
	install-vorbisDATA install-vorbisPYTHON installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-generic \
	mostlyclean-libtool pdf pdf-am ps ps-am uninstall uninstall-am \
	uninstall-componentPYTHON uninstall-diracDATA \
	uninstall-diracPYTHON uninstall-jpegDATA uninstall-jpegPYTHON \
	uninstall-mulawDATA uninstall-mulawPYTHON uninstall-smokeDATA \
	uninstall-smokePYTHON uninstall-speexDATA \
	uninstall-speexPYTHON uninstall-theoraDATA \
	uninstall-theoraPYTHON uninstall-vorbisDATA \
	uninstall-vorbisPYTHON


#if HAVE_PYCHECKER
#check-local: $(PYCHECKER_FILES)
#	if test ! -z "$(PYCHECKER_FILES)"; \
#	then \
#		PYTHONPATH=$(top_srcdir):$(top_builddir) \
#		pychecker -Q -F $(top_srcdir)/misc/pycheckerrc \
#			$(PYCHECKER_FILES); \
#	fi
#endif

clean-local:
	rm -rf *.pyc *.pyo */*.pyc */*.pyo
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
